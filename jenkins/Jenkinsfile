pipeline
{
    agent {
      node { label 'Mac' }
           }
    stages {
        stage('Hello') {
            steps {
                sh 'mvn --version'
                  }
                        }
    }
}
/*
pipeline
{
    agent{ //{ label 'EC2' }
            //docker {
            //     image 'maven:3-alpine'
            //     args '-v /root/.m2:/root/.m2'
            //}
          }
           //tools { maven   'Apache Maven 3.8.6' }
           //jacoco(
          //execPattern: 'target/*.exec',classPattern: 'target/classes',sourcePattern: 'src/main/java',exclusionPattern: 'src/test*'
          // )
    stages {
        stage('Initialize') {
            steps {sh '''echo "PATH = ${PATH}"'''}
                        }
        stage('Build') {
            steps {sh 'mvn -B -Denforcer.skip=true -DskipTests clean package'}
        }
        stage('Test') {
                steps {
                    sh 'mvn test   -Denforcer.skip=true'
               //     step {
               //         [ $class: 'JacocoPublisher',
               //             execPattern: 'target/*.exec',
               //             classPattern: 'target/classes',
               //             sourcePattern: 'src/main/java',
               //             exclusionPattern: 'src/test*']
               //     }
                }
                post {
                    always {
      junit 'target/surefire-reports/*.xml'
    // comment
     //step {
     // [ $class: 'JacocoPublisher',
     // execPattern: 'target/*.exec',
     // classPattern: 'target/classes',
     // sourcePattern: 'src/main/java',
     // exclusionPattern: 'src/test*']
     // }
                    }
                }
        }
       stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
       }
    }
}
*/
/*
pipeline {
    agent {
        docker {
            image 'maven:3-alpine'
            args '-v /root/.m2:/root/.m2'
        }
    }
    stages {
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
        }
    }
}
*/